
=head1 NAME

Mail::Box::MH::Index - keep index files for messages.


=head1 INHERITANCE

 Mail::Box::MH::Index
   is a Mail::Reporter


=head1 SYNOPSIS

 my $index = Mail::Box::MH::Index->new;
 $index->read(...)
 $index->write(...)


=head1 DESCRIPTION

Message folders which store their data in one single file per message are
very inefficient for producing subject overviews and for computing message
threads.  The C<Mail::Box::MH::Index> object is able to store and read a the
headers of a set of C<Mail::Box::MH::Message> messages which are
part of a single C<Mail::Box::MH> folder in one file.

When the C<Mail::Box::MH::Index> functionality is enabled by specifying
L<Mail::Box::MH::new(keep_index)|"METHODS"> when opening a folder, the index file
is automatically read.  When the folder is closed, a new index file is
created.

Special care is taken to avoid problems which occur when the user changes
or removes message files without updating the index. If the index is not
trustworthy it will not be used (costing some performance for the reader
of the folder).



=head1 METHODS


=head2 Constructors


Mail::Box::MH::Index-E<gt>B<new>(OPTIONS)

=over 4

 Option     Defined in       Default                                                   
 filename                    <required>                                                
 head_type                   L<Mail::Message::Head::Subset|Mail::Message::Head::Subset>
 head_wrap                   72                                                        
 log        L<Mail::Reporter>  C<'WARNINGS'>                                             
 trace      L<Mail::Reporter>  C<'WARNINGS'>                                             

. filename FILENAME

=over 4

The FILENAME which is used to store the headers of all the e-mails for
one folder. This must be an absolute pathname.

=back

. head_type CLASS

=over 4

The type of headers which will be used to store header information when
it is read from the index file.  You can not be sure the index contains
all header line (the mailbox may have been updated without updating
the index) so this will usually be (an sub-class of)
L<Mail::Message::Head::Subset|Mail::Message::Head::Subset>.

=back

. head_wrap INTEGER

=over 4

The preferred number of character in each header line.

=back

. log LEVEL

. trace LEVEL

=back

=head2 The Index


$obj-E<gt>B<filename>

=over 4

Returns the name of the index file.

=back

$obj-E<gt>B<get>(MSGFILE)

=over 4

Look if there is header info for the specified MSGFILE.  The filename
represents one message in folder type which are organized as directory.
This method will return an object of the L<new(head_type)|"Constructors"> as specified
during creation of the index object, or C<undef> if the information
is not known or not trustworthy -i.e. the file size changed.

=back

$obj-E<gt>B<read>

=over 4

Read the index file.  The header objects can after this be requested
with the get() method.

=back

$obj-E<gt>B<write>(MESSAGES)

=over 4

Write an index file containing the headers specified MESSAGES
(Mail::Message objects).

=back

=head2 Error handling


$obj-E<gt>B<AUTOLOAD>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<defaultTrace>([LEVEL, [LEVEL])

Mail::Box::MH::Index-E<gt>B<defaultTrace>([LEVEL, [LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<errors>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<log>([LEVEL [,STRINGS]])

Mail::Box::MH::Index-E<gt>B<log>([LEVEL [,STRINGS]])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logPriority>(LEVEL)

Mail::Box::MH::Index-E<gt>B<logPriority>(LEVEL)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logSettings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<notImplemented>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<report>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<reportAll>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<trace>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<warnings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup


$obj-E<gt>B<DESTROY>

=over 4

See L<Mail::Reporter/"Cleanup">

=back

$obj-E<gt>B<inGlobalDestruction>

=over 4

See L<Mail::Reporter/"Cleanup">

=back



=head1 DIAGNOSTICS

I<Error:> Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.






=head1 REFERENCES

See the Mail::Box website at L<http://perl.overmeer.net/mailbox/> for more details.

=head1 COPYRIGHTS

Module version 2.042.
Written by Mark Overmeer (mark@overmeer.net).  See the ChangeLog for
other contributors.

Copyright (c) 2001-2003 by the author(s). All rights reserved.
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.


