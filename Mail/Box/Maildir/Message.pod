
=head1 NAME

Mail::Box::Maildir::Message - one message in a Maildir folder


=head1 INHERITANCE

 Mail::Box::Maildir::Message
   is a Mail::Box::Dir::Message
   is a Mail::Box::Message
   is a Mail::Message
   is a Mail::Reporter


=head1 SYNOPSIS

 my $folder = new Mail::Box::Maildir ...
 my $message = $folder->message(10);


=head1 DESCRIPTION

A C<Mail::Box::Maildir::Message> represents one message in an
L<Mail::Box::Maildir|Mail::Box::Maildir> folder. Each message is stored in a separate file.



=head1 METHODS


=head2 Constructors


$obj-E<gt>B<clone>

=over 4

See L<Mail::Message/"Constructors">

=back

Mail::Box::Maildir::Message-E<gt>B<coerce>(MESSAGE)

=over 4

See L<Mail::Box::Message/"METHODS">

=back

Mail::Box::Maildir::Message-E<gt>B<new>(OPTIONS)

=over 4

See L<Mail::Box::Dir::Message/"METHODS">

=back

=head2 Constructing a message


$obj-E<gt>B<bounce>([RG-OBJECT|OPTIONS])

=over 4

See L<Mail::Message::Construct::Bounce/"Constructing a message">

=back

Mail::Box::Maildir::Message-E<gt>B<build>([MESSAGE|BODY], CONTENT)

=over 4

See L<Mail::Message::Construct::Build/"Constructing a message">

=back

Mail::Box::Maildir::Message-E<gt>B<buildFromBody>(BODY, [HEAD], HEADERS)

=over 4

See L<Mail::Message::Construct::Build/"Constructing a message">

=back

$obj-E<gt>B<forward>(OPTIONS)

=over 4

See L<Mail::Message::Construct::Forward/"Constructing a message">

=back

$obj-E<gt>B<forwardPostlude>

=over 4

See L<Mail::Message::Construct::Forward/"Constructing a message">

=back

$obj-E<gt>B<forwardPrelude>

=over 4

See L<Mail::Message::Construct::Forward/"Constructing a message">

=back

$obj-E<gt>B<forwardSubject>(STRING)

=over 4

See L<Mail::Message::Construct::Forward/"Constructing a message">

=back

Mail::Box::Maildir::Message-E<gt>B<read>(FILEHANDLE|SCALAR|REF-SCALAR|ARRAY-OF-LINES, OPTIONS)

=over 4

See L<Mail::Message::Construct::Read/"Constructing a message">

=back

$obj-E<gt>B<rebuild>(OPTIONS)

=over 4

See L<Mail::Message::Construct::Rebuild/"Constructing a message">

=back

$obj-E<gt>B<reply>(OPTIONS)

=over 4

See L<Mail::Message::Construct::Reply/"Constructing a message">

=back

$obj-E<gt>B<replyPrelude>([STRING|FIELD|ADDRESS])

=over 4

See L<Mail::Message::Construct::Reply/"Constructing a message">

=back

$obj-E<gt>B<replySubject>(STRING)

Mail::Box::Maildir::Message-E<gt>B<replySubject>(STRING)

=over 4

See L<Mail::Message::Construct::Reply/"Constructing a message">

=back

=head2 The Message


$obj-E<gt>B<container>

=over 4

See L<Mail::Message/"The Message">

=back

$obj-E<gt>B<isDummy>

=over 4

See L<Mail::Message/"The Message">

=back

$obj-E<gt>B<isPart>

=over 4

See L<Mail::Message/"The Message">

=back

$obj-E<gt>B<messageId>

=over 4

See L<Mail::Message/"The Message">

=back

$obj-E<gt>B<print>([FILEHANDLE])

=over 4

See L<Mail::Message/"The Message">

=back

$obj-E<gt>B<send>([MAILER], OPTIONS)

=over 4

See L<Mail::Message/"The Message">

=back

$obj-E<gt>B<size>

=over 4

See L<Mail::Message/"The Message">

=back

$obj-E<gt>B<toplevel>

=over 4

See L<Mail::Message/"The Message">

=back

$obj-E<gt>B<write>([FILEHANDLE])

=over 4

See L<Mail::Message/"The Message">

=back

=head2 The header


$obj-E<gt>B<bcc>

=over 4

See L<Mail::Message/"The header">

=back

$obj-E<gt>B<cc>

=over 4

See L<Mail::Message/"The header">

=back

$obj-E<gt>B<date>

=over 4

See L<Mail::Message/"The header">

=back

$obj-E<gt>B<destinations>

=over 4

See L<Mail::Message/"The header">

=back

$obj-E<gt>B<from>

=over 4

See L<Mail::Message/"The header">

=back

$obj-E<gt>B<get>(FIELD)

=over 4

See L<Mail::Message/"The header">

=back

$obj-E<gt>B<guessTimestamp>

=over 4

The filename of a C<Mail::Box::Maildir::Message> contains a timestamp.  This
is a wild guess about the actual time of sending of the message: it is the
time of receipt which may be seconds to hours off.  But is still a good
guess...  When the message header is not parsed, then this date is used.

=back

$obj-E<gt>B<head>([HEAD])

=over 4

See L<Mail::Message/"The header">

=back

$obj-E<gt>B<nrLines>

=over 4

See L<Mail::Message/"The header">

=back

$obj-E<gt>B<sender>

=over 4

See L<Mail::Message/"The header">

=back

$obj-E<gt>B<subject>

=over 4

See L<Mail::Message/"The header">

=back

$obj-E<gt>B<timestamp>

=over 4

See L<Mail::Message/"The header">

=back

$obj-E<gt>B<to>

=over 4

See L<Mail::Message/"The header">

=back

=head2 The body


$obj-E<gt>B<body>([BODY])

=over 4

See L<Mail::Message/"The body">

=back

$obj-E<gt>B<decoded>(OPTIONS)

=over 4

See L<Mail::Message/"The body">

=back

$obj-E<gt>B<encode>(OPTIONS)

=over 4

See L<Mail::Message/"The body">

=back

$obj-E<gt>B<isMultipart>

=over 4

See L<Mail::Message/"The body">

=back

$obj-E<gt>B<isNested>

=over 4

See L<Mail::Message/"The body">

=back

$obj-E<gt>B<parts>(['ALL'|'ACTIVE'|'DELETED'|'RECURSE'|FILTER])

=over 4

See L<Mail::Message/"The body">

=back

=head2 The message


$obj-E<gt>B<copyTo>(FOLDER)

=over 4

See L<Mail::Box::Message/"The message">

=back

$obj-E<gt>B<filename>([FILENAME])

=over 4

Returns the current filename for this message.  If the FILENAME argument
is specified, a new filename will be set.  For maildir messages this
means that modifications are immediately performed: there will be
a rename (move) from the old name to the new name.  Labels may change
within in the message object as well.

=back

$obj-E<gt>B<folder>([FOLDER])

=over 4

See L<Mail::Box::Message/"The message">

=back

$obj-E<gt>B<moveTo>(FOLDER)

=over 4

See L<Mail::Box::Message/"The message">

=back

$obj-E<gt>B<seqnr>([INTEGER])

=over 4

See L<Mail::Box::Message/"The message">

=back

=head2 Flags


$obj-E<gt>B<delete>

=over 4

See L<Mail::Box::Message/"Flags">

=back

$obj-E<gt>B<deleted>([BOOLEAN])

=over 4

See L<Mail::Box::Message/"Flags">

=back

$obj-E<gt>B<isDeleted>

=over 4

See L<Mail::Box::Message/"Flags">

=back

$obj-E<gt>B<isModified>

=over 4

See L<Mail::Message/"Flags">

=back

$obj-E<gt>B<label>(LABEL [,VALUE [LABEL, VALUE] ])

=over 4

See L<Mail::Message/"Flags">

=back

$obj-E<gt>B<labels>

=over 4

See L<Mail::Message/"Flags">

=back

$obj-E<gt>B<labelsToStatus>

=over 4

See L<Mail::Message/"Flags">

=back

$obj-E<gt>B<modified>([BOOLEAN])

=over 4

See L<Mail::Message/"Flags">

=back

$obj-E<gt>B<statusToLabels>

=over 4

See L<Mail::Message/"Flags">

=back

=head2 The whole message as text


$obj-E<gt>B<file>

=over 4

See L<Mail::Message::Construct::Text/"The whole message as text">

=back

$obj-E<gt>B<lines>

=over 4

See L<Mail::Message::Construct::Text/"The whole message as text">

=back

$obj-E<gt>B<printStructure>([FILEHANDLE][, INDENT])

=over 4

See L<Mail::Message::Construct::Text/"The whole message as text">

=back

$obj-E<gt>B<string>

=over 4

See L<Mail::Message::Construct::Text/"The whole message as text">

=back

=head2 Internals


$obj-E<gt>B<accept>

=over 4

Accept a message for the folder.  This will move it from the C<new> or
C<tmp> sub-directories into the C<cur> sub-directory.  When you accept an
already accepted message, nothing will happen.

=back

$obj-E<gt>B<create>(FILENAME)

=over 4

See L<Mail::Box::Dir::Message/"Internals">

=back

$obj-E<gt>B<diskDelete>

=over 4

See L<Mail::Box::Message/"Internals">

=back

$obj-E<gt>B<isDelayed>

=over 4

See L<Mail::Message/"Internals">

=back

$obj-E<gt>B<labelsToFilename>

=over 4

When the labels on a message change, this may implicate a change in
the message's filename.  The change will take place immediately.

=back

$obj-E<gt>B<loadBody>

=over 4

See L<Mail::Box::Dir::Message/"Internals">

=back

$obj-E<gt>B<loadHead>

=over 4

See L<Mail::Box::Dir::Message/"Internals">

=back

$obj-E<gt>B<parser>

=over 4

See L<Mail::Box::Dir::Message/"Internals">

=back

$obj-E<gt>B<readBody>(PARSER, HEAD [, BODYTYPE])

=over 4

See L<Mail::Box::Message/"Internals">

=back

$obj-E<gt>B<readFromParser>(PARSER, [BODYTYPE])

=over 4

See L<Mail::Message/"Internals">

=back

$obj-E<gt>B<readHead>(PARSER [,CLASS])

=over 4

See L<Mail::Message/"Internals">

=back

$obj-E<gt>B<recursiveRebuildPart>(PART, OPTIONS)

=over 4

See L<Mail::Message::Construct::Rebuild/"Internals">

=back

$obj-E<gt>B<storeBody>(BODY)

=over 4

See L<Mail::Message/"Internals">

=back

$obj-E<gt>B<takeMessageId>([STRING])

=over 4

See L<Mail::Message/"Internals">

=back

=head2 Error handling


$obj-E<gt>B<AUTOLOAD>

=over 4

See L<Mail::Message::Construct/"METHODS">

=back

$obj-E<gt>B<defaultTrace>([LEVEL, [LEVEL])

Mail::Box::Maildir::Message-E<gt>B<defaultTrace>([LEVEL, [LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<errors>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<log>([LEVEL [,STRINGS]])

Mail::Box::Maildir::Message-E<gt>B<log>([LEVEL [,STRINGS]])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logPriority>(LEVEL)

Mail::Box::Maildir::Message-E<gt>B<logPriority>(LEVEL)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logSettings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<notImplemented>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<report>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<reportAll>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<shortString>

=over 4

See L<Mail::Box::Message/"Error handling">

=back

$obj-E<gt>B<trace>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<warnings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup


$obj-E<gt>B<DESTROY>

=over 4

See L<Mail::Message/"Cleanup">

=back

$obj-E<gt>B<inGlobalDestruction>

=over 4

See L<Mail::Reporter/"Cleanup">

=back



=head1 DIAGNOSTICS

I<Error:> Cannot create parser for $filename.

For some reason (the previous message have told you already) it was not possible
to create a message parser for the specified filename.

I<Error:> Cannot include forward source as $include.

Unknown alternative for the L<forward(include)|"Constructing a message">.  Valid choices are
C<NO>, C<INLINE>, and C<ATTACH>.

I<Error:> Cannot include reply source as $include.

Unknown alternative for the C<include> option of L<reply()|"Constructing a message">.  Valid
choices are C<NO>, C<INLINE>, and C<ATTACH>.

I<Error:> Cannot write message to $filename: $!

When a modified or new message is written to disk, it is first written
to a temporary file in the folder directory.  For some reason, it is
impossible to create this file.

I<Error:> Failed to move $new to $filename: $!

When a modified or new message is written to disk, it is first written
to a temporary file in the folder directory.  Then, the new file is
moved to replace the existing file.  Apparently, the latter fails.

I<Error:> Message $filename is not in a Maildir folder.

To accept a message into a folder (move it from a temporary location into
this folder's view), it must be already created one maildir folder's
sub-directory. When a I<foreign> message is coerce to become part of a
maildir, the coercion will create a file which is acceptable.

I<Error:> No address to create forwarded to.

If a forward message is created, a destination address must be specified.

I<Error:> No default mailer found to send message.

The message L<send()|"The Message"> mechanism had not enough information to automatically
find a mail transfer agent to sent this message.  Specify a mailer
explicitly using the C<via> options.

I<Error:> Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.

I<Error:> Unable to read delayed body.

For some reason, the header of the message could be read, but the body
cannot.  Probably the file has disappeared or the permissions were
changed during the progress of the program.

I<Error:> Unable to read delayed head.

Mail::Box tries to be I<lazy> with respect to parsing messages.  When a
directory organized folder is opened, only the filenames of messages are
collected.  At first use, the messages are read from their file.  Apperently,
a message is used for the first time here, but has disappeared or is
unreadible for some other reason.

I<Error:> no rebuild rule $name defined.



=head1 DETAILS






=head1 REFERENCES

See the Mail::Box website at L<http://perl.overmeer.net/mailbox/> for more details.

=head1 COPYRIGHTS

Module version 2.042.
Written by Mark Overmeer (mark@overmeer.net).  See the ChangeLog for
other contributors.

Copyright (c) 2001-2003 by the author(s). All rights reserved.
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.


