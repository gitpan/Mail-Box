
=head1 NAME

Mail::Message::Construct::Text - capture a Mail::Message as text


=head1 INHERITANCE


=head1 SYNOPSIS

 my $text = $msg->string;
 my $text = "$msg";   # via overload

 my @text = $msg->lines;
 my @text = @$lines;  # via overload

 my $fh   = $msg->file;
 my $line = <$fh>;

 $msg->printStructure;


=head1 DESCRIPTION

Complex functionality on L<Mail::Message|Mail::Message> objects is implemented in
different files which are autoloaded.  This file implements the
functionality related to creating message replies.



=head1 METHODS


=head2 The whole message as text


$obj-E<gt>B<file>

=over 4

Returns the message as file-handle.

=back

$obj-E<gt>B<lines>

=over 4

Returns the whole message as set of lines.  In LIST context, copies of the
lines are returned.  In SCALAR context, a reference to an array of lines
is returned.

=back

$obj-E<gt>B<printStructure>([FILEHANDLE][, INDENT])

=over 4

Print the structure of a message to the selected filehandle.
The message's subject and the types of all composing parts are
displayed.

INDENT specifies the initial indentation string: it is added in
front of each line, and SHALL end with a blank, if specified.

I<Example:> 

 my $msg = ...;
 $msg->printStructure(\*OUTPUT);
 $msg->printStructure;

 # Possible output for one message:
 multipart/mixed: forwarded message from Pietje Puk (1550 bytes)
    text/plain (164 bytes)
    message/rfc822 (1043 bytes)
       multipart/alternative: A multipart alternative (942 bytes)
          text/plain (148 bytes, deleted)
          text/html (358 bytes)

=back

$obj-E<gt>B<string>

=over 4

Returns the whole message as string.

=back








=head1 REFERENCES

See the Mail::Box website at L<http://perl.overmeer.net/mailbox/> for more details.

=head1 COPYRIGHTS

Module version 2.041.
Written by Mark Overmeer (mark@overmeer.net).  See the ChangeLog for
other contributors.

Copyright (c) 2001-2003 by the author(s). All rights reserved.
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.


