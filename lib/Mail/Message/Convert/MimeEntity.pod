=head1 NAME

Mail::Message::Convert::MimeEntity - translate Mail::Message to MIME::Entity vv

=head1 INHERITANCE

 Mail::Message::Convert::MimeEntity
   is a Mail::Message::Convert
   is a Mail::Reporter

=head1 SYNOPSIS

 use Mail::Message::Convert::MimeEntity;
 my $convert = Mail::Message::Convert::MimeEntity->new;

 my Mail::Message $msg    = Mail::Message->new;
 my MIME::Entity  $entity = $convert->export($msg);

 my MIME::Entity  $entity = MIME::Entity->new;
 my Mail::Message $msg    = $convert->from($entity);

 use Mail::Box::Manager;
 my $mgr     = Mail::Box::Manager->new;
 my $folder  = $mgr->open(folder => 'Outbox');
 $folder->addMessage($entity);

=head1 DESCRIPTION

The MIME::Entity extends L<Mail::Internet|Mail::Internet> message with multiparts
and more methods.  The L<Mail::Message|Mail::Message> objects are more flexible
in how the message parts are stored, and uses separate header and body
objects.

=head2 Converters between message objects

=head2 Other converters

=head1 METHODS

=head2 Constructors

Mail::Message::Convert::MimeEntity-E<gt>B<new>(OPTIONS)

=over 4

See L<Mail::Message::Convert/"METHODS">

=back

=head2 Converting

$obj-E<gt>B<export>(MESSAGE, [PARSER])

=over 4

Returns a new L<MIME::Entity> message object based on the
information from the MESSAGE, which is a L<Mail::Message|Mail::Message> object.

You may want to supply your own PARSER, which is a MIME::Parser
object, to change the parser flags.  Without a PARSER object, one
is created for you, with all the default settings.

If C<undef> is passed, in place of a MESSAGE, then an empty list is
returned.  When the parsing failes, then L<MIME::Parser> throws an
exception.

example: 

 my $convert = Mail::Message::Convert::MimeEntity->new;
 my Mail::Message $msg  = Mail::Message->new;
 my manual MIME::Entity  $copy = $convert->export($msg);

=back

$obj-E<gt>B<from>(MIME-OBJECT)

=over 4

Returns a new L<Mail::Message|Mail::Message> object based on the information from
the specified L<MIME::Entity>.  If the conversion fails, the C<undef>
is returned.  If C<undef> is passed in place of an OBJECT, then an
empty list is returned.

example: 

 my $convert = Mail::Message::Convert::MimeEntity->new;
 my MIME::Entity  $msg  = MIME::Entity->new;
 my Mail::Message $copy = $convert->from($msg);

=back

$obj-E<gt>B<selectedFields>(HEAD)

=over 4

See L<Mail::Message::Convert/"Converting">

=back

=head2 Error handling

$obj-E<gt>B<AUTOLOAD>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<addReport>(OBJECT)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

Mail::Message::Convert::MimeEntity-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<errors>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<log>([LEVEL [,STRINGS]])

Mail::Message::Convert::MimeEntity-E<gt>B<log>([LEVEL [,STRINGS]])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logPriority>(LEVEL)

Mail::Message::Convert::MimeEntity-E<gt>B<logPriority>(LEVEL)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logSettings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<notImplemented>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<report>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<reportAll>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<trace>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<warnings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup

$obj-E<gt>B<DESTROY>

=over 4

See L<Mail::Reporter/"Cleanup">

=back

$obj-E<gt>B<inGlobalDestruction>

=over 4

See L<Mail::Reporter/"Cleanup">

=back

=head1 DIAGNOSTICS

Error: Converting from MIME::Entity but got a $type, return

=over 4

=back

Error: Package $package does not implement $method.

=over 4

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.

=back

=head1 SEE ALSO

This module is part of Mail-Box distribution version 2.092,
built on November 20, 2009. Website: F<http://perl.overmeer.net/mailbox/>

=head1 LICENSE

Copyrights 2001-2009 by Mark Overmeer. For other contributors see ChangeLog.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

