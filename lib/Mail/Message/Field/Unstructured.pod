
=head1 NAME

Mail::Message::Field::Unstructured - smart unstructured field


=head1 INHERITANCE

 Mail::Message::Field::Unstructured
   is a Mail::Message::Field::Full
   is a Mail::Message::Field
   is a Mail::Reporter


=head1 SYNOPSIS

 my $f = Mail::Message::Field::Unstructured->new(Comments => 'hi!');


=head1 DESCRIPTION

Unstructured fields do contain information which is not restricted in
any way.  RFC2822 defines some unstructured fields, but by default all
unknown fields are unstructured as well.  Things like attributes and
comments have no meaning for unstructured fields, but encoding does.


=head1 OVERLOADED


overload: B<"">

=over 4

See L<Mail::Message::Field/"OVERLOADED">

=back

overload: B<+0>

=over 4

See L<Mail::Message::Field/"OVERLOADED">

=back

overload: B<<=>>

=over 4

See L<Mail::Message::Field/"OVERLOADED">

=back

overload: B<bool>

=over 4

See L<Mail::Message::Field/"OVERLOADED">

=back

overload: B<cmp>

=over 4

See L<Mail::Message::Field/"OVERLOADED">

=back

overload: B<stringification>

=over 4

See L<Mail::Message::Field::Full/"OVERLOADED">

=back


=head1 METHODS


=head2 Constructors


$obj-E<gt>B<clone>

=over 4

See L<Mail::Message::Field/"Constructors">

=back

Mail::Message::Field::Unstructured-E<gt>B<from>(FIELD, OPTIONS)

=over 4

See L<Mail::Message::Field::Full/"Constructors">

=back

Mail::Message::Field::Unstructured-E<gt>B<new>(DATA)

=over 4

When the DATA is specified as single line, the content part is considered to
be correcly (character) encoded and escaped.  Typically, it is a line as
read from file.  The folding of the line is kept as is.

In case more than one argument is provided, the second is considered the BODY.
Attributes and other special things are not defined for unstructured fields,
and therefore not valid options.  The BODY can be a single string, a single
OBJECT, or an array of OBJECTS.  The objects are stringified (into a comma
separated list).  Each BODY element is interpreted with the specified encoding.

When the BODY is empty, the construction of the object fails: C<undef> is
returned.

 Option    Defined in       Default      
 charset   L<Mail::Message::Field::Full>  undef        
 encoding  L<Mail::Message::Field::Full>  C<'q'>       
 force     L<Mail::Message::Field::Full>  false        
 language  L<Mail::Message::Field::Full>  undef        
 log       L<Mail::Reporter>  C<'WARNINGS'>
 trace     L<Mail::Reporter>  C<'WARNINGS'>

. charset STRING

. encoding 'q'|'Q'|'b'|'B'

. force BOOLEAN

. language STRING

. log LEVEL

. trace LEVEL

I<Example:> 

 my $s = Mail::Message::Field::Unstructured->new('Comment', 'Hi!');

 # Use autodetect
 my $s = Mail::Message::Field::Full->new('Comment', 'Hi!');
 my $s = Mail::Message::Field::Full->new('Comment: Hi!');

=back

=head2 The field


$obj-E<gt>B<isStructured>

Mail::Message::Field::Unstructured-E<gt>B<isStructured>

=over 4

See L<Mail::Message::Field/"The field">

=back

$obj-E<gt>B<length>

=over 4

See L<Mail::Message::Field/"The field">

=back

$obj-E<gt>B<nrLines>

=over 4

See L<Mail::Message::Field/"The field">

=back

$obj-E<gt>B<print>([FILEHANDLE])

=over 4

See L<Mail::Message::Field/"The field">

=back

$obj-E<gt>B<size>

=over 4

See L<Mail::Message::Field/"The field">

=back

$obj-E<gt>B<string>([WRAP])

=over 4

See L<Mail::Message::Field/"The field">

=back

$obj-E<gt>B<toDisclose>

=over 4

See L<Mail::Message::Field/"The field">

=back

=head2 Access to the name


$obj-E<gt>B<Name>

=over 4

See L<Mail::Message::Field/"Access to the name">

=back

$obj-E<gt>B<name>

=over 4

See L<Mail::Message::Field/"Access to the name">

=back

$obj-E<gt>B<wellformedName>([STRING])

=over 4

See L<Mail::Message::Field/"Access to the name">

=back

=head2 Access to the body


$obj-E<gt>B<body>

=over 4

See L<Mail::Message::Field/"Access to the body">

=back

$obj-E<gt>B<decodedBody>(OPTIONS)

=over 4

See L<Mail::Message::Field::Full/"Access to the body">

=back

$obj-E<gt>B<folded>

=over 4

See L<Mail::Message::Field/"Access to the body">

=back

$obj-E<gt>B<foldedBody>([BODY])

=over 4

See L<Mail::Message::Field/"Access to the body">

=back

$obj-E<gt>B<stripCFWS>([STRING])

Mail::Message::Field::Unstructured-E<gt>B<stripCFWS>([STRING])

=over 4

See L<Mail::Message::Field/"Access to the body">

=back

$obj-E<gt>B<unfoldedBody>([BODY, [WRAP]])

=over 4

See L<Mail::Message::Field/"Access to the body">

=back

=head2 Access to the content


$obj-E<gt>B<addresses>

=over 4

See L<Mail::Message::Field/"Access to the content">

=back

$obj-E<gt>B<attribute>(NAME [, VALUE])

=over 4

See L<Mail::Message::Field/"Access to the content">

=back

$obj-E<gt>B<beautify>

=over 4

See L<Mail::Message::Field::Full/"Access to the content">

=back

$obj-E<gt>B<comment>([STRING])

=over 4

See L<Mail::Message::Field/"Access to the content">

=back

$obj-E<gt>B<createComment>(STRING, OPTIONS)

Mail::Message::Field::Unstructured-E<gt>B<createComment>(STRING, OPTIONS)

=over 4

See L<Mail::Message::Field::Full/"Access to the content">

=back

$obj-E<gt>B<createPhrase>(STRING, OPTIONS)

Mail::Message::Field::Unstructured-E<gt>B<createPhrase>(STRING, OPTIONS)

=over 4

See L<Mail::Message::Field::Full/"Access to the content">

=back

$obj-E<gt>B<study>

=over 4

See L<Mail::Message::Field/"Access to the content">

=back

$obj-E<gt>B<toDate>([TIME])

Mail::Message::Field::Unstructured-E<gt>B<toDate>([TIME])

=over 4

See L<Mail::Message::Field/"Access to the content">

=back

$obj-E<gt>B<toInt>

=over 4

See L<Mail::Message::Field/"Access to the content">

=back

=head2 Other methods


$obj-E<gt>B<dateToTimestamp>(STRING)

Mail::Message::Field::Unstructured-E<gt>B<dateToTimestamp>(STRING)

=over 4

See L<Mail::Message::Field/"Other methods">

=back

=head2 Internals


$obj-E<gt>B<consume>(LINE | (NAME,BODY|OBJECTS))

=over 4

See L<Mail::Message::Field/"Internals">

=back

$obj-E<gt>B<decode>(STRING, OPTIONS)

Mail::Message::Field::Unstructured-E<gt>B<decode>(STRING, OPTIONS)

=over 4

See L<Mail::Message::Field::Full/"Internals">

=back

$obj-E<gt>B<defaultWrapLength>([LENGTH])

=over 4

See L<Mail::Message::Field/"Internals">

=back

$obj-E<gt>B<encode>(STRING, OPTIONS)

=over 4

See L<Mail::Message::Field::Full/"Internals">

=back

$obj-E<gt>B<fold>(NAME, BODY, [MAXCHARS])

=over 4

See L<Mail::Message::Field/"Internals">

=back

$obj-E<gt>B<setWrapLength>([LENGTH])

=over 4

See L<Mail::Message::Field/"Internals">

=back

$obj-E<gt>B<stringifyData>(STRING|ARRAY|OBJECTS)

=over 4

See L<Mail::Message::Field/"Internals">

=back

$obj-E<gt>B<unfold>(STRING)

=over 4

See L<Mail::Message::Field/"Internals">

=back

=head2 Parsing


$obj-E<gt>B<consumeComment>(STRING)

Mail::Message::Field::Unstructured-E<gt>B<consumeComment>(STRING)

=over 4

See L<Mail::Message::Field::Full/"Parsing">

=back

$obj-E<gt>B<consumeDotAtom>(STRING)

=over 4

See L<Mail::Message::Field::Full/"Parsing">

=back

$obj-E<gt>B<consumePhrase>(STRING)

Mail::Message::Field::Unstructured-E<gt>B<consumePhrase>(STRING)

=over 4

See L<Mail::Message::Field::Full/"Parsing">

=back

$obj-E<gt>B<parse>(STRING)

=over 4

See L<Mail::Message::Field::Full/"Parsing">

=back

=head2 Error handling


$obj-E<gt>B<AUTOLOAD>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<addReport>(OBJECT)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<defaultTrace>([LEVEL, [LEVEL])

Mail::Message::Field::Unstructured-E<gt>B<defaultTrace>([LEVEL, [LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<errors>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<log>([LEVEL [,STRINGS]])

Mail::Message::Field::Unstructured-E<gt>B<log>([LEVEL [,STRINGS]])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logPriority>(LEVEL)

Mail::Message::Field::Unstructured-E<gt>B<logPriority>(LEVEL)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logSettings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<notImplemented>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<report>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<reportAll>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<trace>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<warnings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup


$obj-E<gt>B<DESTROY>

=over 4

See L<Mail::Reporter/"Cleanup">

=back

$obj-E<gt>B<inGlobalDestruction>

=over 4

See L<Mail::Reporter/"Cleanup">

=back



=head1 DIAGNOSTICS

I<Warning:> Field content is not numerical: $content

The numeric value of a field is requested (for instance the C<Lines> or
C<Content-Length> fields should be numerical), however the data contains
weird characters.

I<Warning:> Illegal character in charset '$charset'

The field is created with an utf8 string which only contains data from the
specified character set.  However, that character set can never be a valid
name because it contains characters which are not permitted.

I<Warning:> Illegal character in field name $name

A new field is being created which does contain characters not permitted
by the RFCs.  Using this field in messages may break other e-mail clients
or transfer agents, and therefore mutulate or extinguish your message.

I<Warning:> Illegal character in language '$lang'

The field is created with data which is specified to be in a certain language,
however, the name of the language cannot be valid: it contains characters
which are not permitted by the RFCs.

I<Warning:> Illegal encoding '$encoding', used 'q'

The RFCs only permit base64 (C<b > or C<B >) or quoted-printable
(C<q> or C<Q>) encoding.  Other than these four options are illegal.

I<Error:> Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.


=head1 DETAILS






=head1 REFERENCES

See the MailBox website at L<http://perl.overmeer.net/mailbox/> for more details.

=head1 COPYRIGHTS

Distribution version 2.050.
Written by Mark Overmeer (mark@overmeer.net).  See the ChangeLog for
other contributors.

Copyright (c) 2001-2003 by the author(s). All rights reserved.
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.


