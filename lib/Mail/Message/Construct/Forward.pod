
=head1 NAME

Mail::Message::Construct::Forward - forwarding a Mail::Message



=head1 SYNOPSIS

 my Mail::Message $forward = $message->forward(To => 'you');
 $forward->send;


=head1 DESCRIPTION

Complex functionality on L<Mail::Message|Mail::Message> objects is implemented in
different files which are autoloaded.  This file implements the
functionality related to creating forwarded messages.



=head1 METHODS


=head2 Constructing a message


$obj-E<gt>B<forward>(OPTIONS)

=over 4

Forward the content of this message.  The body of the message to be forwarded
is encapsulated in some accompanying text (if you have no wish for that, than
C<bounce> is your choice).  A L<Mail::Message|Mail::Message> object is returned on success.

You may forward a whole message, but also message parts.
You may wish to overrule some of the default header settings for the
reply immediately, or you may do that later with C<set> on the header.

When a multi-part body is encountered, and the message is included to
ATTACH, the parts which look like signatures will be removed.  If only
one message remains, it will be the added as single attachment, otherwise
a nested multipart will be the result.  The value of this option does not
matter, as long as it is present.  See C<Mail::Message::Body::Multipart>.

 Option      Defined in       Default                                                                       
 Bcc                          undef                                                                         
 Cc                           undef                                                                         
 Date                         <now>                                                                         
 From                         <'to' in current>                                                             
 Message-ID                   <uniquely generated>                                                          
 Subject                      L<forwardSubject()|Mail::Message::Construct::Forward/"Constructing a message">
 To                           <required>                                                                    
 body                         undef                                                                         
 include                      <if body then C<'NO'> else C<'INLINE'>>                                       
 preamble                     C<constructed from prelude and postlude>                                      
 signature                    undef                                                                         

. Bcc ADDRESSES

=over 4

Receivers of blind carbon copies: their names will not be published to
other message receivers.

=back

. Cc ADDRESSES

=over 4

The carbon-copy receivers, by default none.

=back

. Date DATE

=over 4

The date to be used in the message sent.

=back

. From ADDRESSES

=over 4

Your identification, by default taken from the C<To> field of the
source message.

=back

. Message-ID STRING

=over 4

Supply a STRING as specific message-id for the forwarded message.
By default, one is generated for you.  If there are no angles around
your id, they will be added.

=back

. Subject STRING|CODE

=over 4

Force the subject line to the specific STRING, or the result of the
subroutine specified by CODE.  The subroutine will be called passing
the subject of the original message as only argument.  By default,
the L<forwardSubject()|Mail::Message::Construct::Forward/"Constructing a message"> method is used.

=back

. To ADDRESSES

=over 4

The destination of your message. Obligatory.  The ADDRESSES may be
specified as string, a Mail::Address object, or as array of
Mail::Address objects.

=back

. body OBJECT

=over 4

If you specify a fully prepared body OBJECT, it will be used as forwarded
message contents.  In this case, only the headers are constructed for you.

=back

. include 'NO'|'INLINE'|'ATTACH'|'ENCAPSULATE'

=over 4

Must the message where this is a reply to be included in the message?
When C<INLINE> is given, you may pass the options of L<forwardInline()|Mail::Message::Construct::Forward/"Constructing a message">
as well.

In many applications, the forward option C<as attachment> results in a
structure which is produced when this option is set to C<ENCAPSULATE>.
Their default behavior is usually C<INLINE>.

It is only possible to inline textual messages, therefore binary or
multi-part messages will always be enclosed as attachment.
Read the details about this choice in section L</Creating a forward>
subsection L</Including the original message>.

=back

. preamble STRING|BODY

=over 4

Part which is attached before the forwarded message.  If no preamble
is given, then it is constructed from the prelude and postlude.  When
these are also not present, you will still get a one liner: the result
of L<forwardPrelude()|Mail::Message::Construct::Forward/"Constructing a message">

=back

. signature BODY|MESSAGE

=over 4

The signature to be added in case of a multi-part forward.  The mime-type
of the signature body should indicate this is a used as such.  However,
in INLINE mode, the body will be taken, a line containing C<'-- '> added
before it, and added behind the epilogue.

=back

=back

$obj-E<gt>B<forwardAttach>(OPTIONS)

=over 4

Forward the message as I<flat> attachment to the specified C<preamble>.  You
can specify all options available to C<forward()>, although a C<preamble>
which is provided as body object is required, and any specified C<body>
is ignored.

 Option    Defined in  Default   
 preamble              <required>

. preamble BODY|PART

=back

$obj-E<gt>B<forwardEncapsulate>(OPTIONS)

=over 4

Like L<forwardAttach()|Mail::Message::Construct::Forward/"Constructing a message">, but in this case the original message is first
encapsulated as nested message in a L<Mail::Message::Body::Nested|Mail::Message::Body::Nested>, and
then joint into a multipart.

You can specify all options available to C<forward()>, although a C<preamble>
which is provided as body object is required, and any specified C<body>
is ignored.  Signatures are not stripped.  Signatures are not stripped.

 Option    Defined in  Default   
 preamble              <required>

. preamble BODY|PART

=back

$obj-E<gt>B<forwardInline>(OPTIONS)

=over 4

This method is equivalent in behavior to L<forward()|Mail::Message::Construct::Forward/"Constructing a message"> with the
option C<include> set to C<'INLINE'>.  You can specify most of
the fields which are available to L<forward()|Mail::Message::Construct::Forward/"Constructing a message"> except
C<include> and C<body>.

 Option           Defined in       Default                                   
 is_attached                       C<"[The forwarded message is attached]\n">
 max_signature                     C<10>                                     
 postlude                          undef                                     
 prelude                           undef                                     
 quote                             undef                                     
 strip_signature                   C<qr/^--\s/>                              

. is_attached STRING

=over 4

A forward on binary messages can not be inlined.  Therefore, they are
automatically translated into an attachment, as made by L<forwardAttach()|Mail::Message::Construct::Forward/"Constructing a message">.
The obligatory preamble option to that method may be specified as option
to this method, to be used in case of such a forward of a binary, but
is otherwise constructed from the prelude, the value of this option, and
the postlude.

=back

. max_signature INTEGER

=over 4

Passed to L<Mail::Message::Body::stripSignature(max_lines)|Mail::Message::Body::Construct/"Constructing a body">.  Only
effective for single-part messages.

=back

. postlude BODY

=over 4

The line(s) which to be added after the quoted reply lines.  Create a
body for it first.  This should not include the signature, which has its
own option.  The signature will be added after the postlude when the
forwarded message is C<INLINE>d.

=back

. prelude BODY

=over 4

The line(s) which will be added before the quoted forwarded lines.
If nothing is specified, the result of the L<forwardPrelude()|Mail::Message::Construct::Forward/"Constructing a message"> method
is used.  When C<undef> is specified, no prelude will be added.

=back

. quote CODE|STRING

=over 4

Mangle the lines of an C<INLINE>d reply with CODE, or by prepending a
STRING to each line.  The routine specified by CODE is called when the
line is in C<$_>.

By default, nothing is added before each line.  This option is processed
after the body has been decoded.

=back

. strip_signature REGEXP|STRING|CODE

=over 4

Remove the signature of the sender.  The value of this parameter is
passed to L<Mail::Message::Body::stripSignature(pattern)|Mail::Message::Body::Construct/"Constructing a body">, unless the
source text is not included.  The signature is stripped from the message
before quoting.

=back

=back

$obj-E<gt>B<forwardNo>(OPTIONS)

=over 4

Construct a forward, where the whole body of the message is already
constructed.  That complex body is usually produced in L<forwardInline()|Mail::Message::Construct::Forward/"Constructing a message">,
L<forwardAttach()|Mail::Message::Construct::Forward/"Constructing a message">, or L<forwardEncapsulate()|Mail::Message::Construct::Forward/"Constructing a message">.

The OPTIONS are the same as for C<forward()> except that C<body> is
required.  Some other options, like C<preamble>, are ignored.

 Option  Defined in  Default   
 body                <required>

. body BODY

=back

$obj-E<gt>B<forwardPostlude>

=over 4

Added after the forwarded message.

I<Example:> 

 ---- END forwarded message

=back

$obj-E<gt>B<forwardPrelude>

=over 4

Create a few lines to be included before the forwarded message
content.  The return is an array of lines.

I<Example:> 

 ---- BEGIN forwarded message
 From: him@somewhere.else.nl (Original Sender)
 To: me@example.com (Me the receiver)
 Cc: the.rest@world.net
 Date: Wed, 9 Feb 2000 15:44:05 -0500
 <blank line>

=back

$obj-E<gt>B<forwardSubject>(STRING)

=over 4

Create a subject for a message which is a forward from this one.  This routine
tries to count the level of reply in subject field, and transform it into
a standard form.  Please contribute improvements.

I<Example:> 

 subject                 --> Forw: subject
 Re: subject             --> Forw: Re: subject
 Re[X]: subject          --> Forw: Re[X]: subject
 <blank>                 --> Forwarded

=back



=head1 DIAGNOSTICS

I<Error:> Cannot include forward source as $include.

Unknown alternative for the L<forward(include)|Mail::Message::Construct::Forward/"Constructing a message">.  Valid choices are
C<NO>, C<INLINE>, C<ATTACH>, and C<ENCAPSULATE>.

I<Error:> No address to create forwarded to.

If a forward message is created, a destination address must be specified.

I<Error:> forwardAttach requires a preamble object


I<Error:> forwardEncapsulate requires a preamble object



=head1 DETAILS


=head2 Creating a forward


=head3 Including the original message

The main difference between L<bounce()|Mail::Message::Construct::Bounce/"Constructing a message"> and L<forward()|Mail::Message::Construct::Forward/"Constructing a message"> is the reason
for message processing.  The I<bounce> has no intention to modify the
content of message: the same information is passed-on to someplace else.
This may mean some conversions, but for instance, the Message-ID does
not need to be changed.

The purpose of I<forward()> is to pass on information which is
modified: annotated or reduced.  The information is not sent back
to the author of the original message (which is implemented by L<reply()|Mail::Message::Construct::Reply/"Constructing a message">),
but to someone else.

So: some information comes in, is modified, and than forwarded to someone
else.  Currently, there are four ways to get the original information
included:

=over 4

=item * specify a body

When you specify L<forward(body)|Mail::Message::Construct::Forward/"Constructing a message">, you have created your own body object to
be used as content of the forwarded message.  This implies that
L<forward(include)|Mail::Message::Construct::Forward/"Constructing a message"> is C<'NO'>: no automatic generation of the forwarded
body.

=item * inline the original

The L<forward(include)|Mail::Message::Construct::Forward/"Constructing a message"> is set to C<'INLINE'> (the default)
This is the most complicated situation, but most often used by MUAs:
the original message is inserted textually in the new body.  You can
set-up automatic stripping of signatures, the way of encapsulation,
and texts which should be added before and after the encapsulated part.

However, the result may not always be what you expect.  For instance,
some people use very long signatures which will not be automatically
stripped because the pass the threshold.  So, you probably need some
manual intervention after the message is created and before it is sent.

When a binary message is encountered, inlining is impossible.  In that
case, the message is treated as if C<'ENCAPSULATE'> was requested.

=item * attach the original

When L<forward(include)|Mail::Message::Construct::Forward/"Constructing a message"> is explicitly set to C<'ATTACH'> the result
will be a multipart which contains two parts.  The first part will
be your message, and the second the body of the original message.

This means that the headers of the forwarded message are used for
the new message, and detached from the part which now contains the
original body information.  Content related headers will (of course)
still be part of that part, but lines line C<To> and C<Subject> will
not be stored with that part.

As example of the structural transformation:

 # code: $original->printStructure;
 multipart/alternative: The source message
   text/plain: content in raw text
   text/html: content as html

 # code: $fwd = $original->forward(include => 'ATTACH');
 # code: $fwd->printStructure
 multipart/mixed: The source message
   text/plain: prelude/postlude/signature
   multipart/alternative
     text/plain: content in raw text
     text/html: content as html

=item * encapsulate the original

When L<forward(include)|Mail::Message::Construct::Forward/"Constructing a message"> is explicitly set to C<'ENCAPSULATE'>, then
the original message is left in-tact as good as possible.  The lines
of the original message are used in the main message header but also
enclosed in the part header.

The encapsulation is implemented using a nested message, content type
C<message/rfc822>.  As example of the structural transformation:

 # code: $original->printStructure;
 multipart/alternative: The source message
   text/plain: content in raw text
   text/html: content as html

 # code: $fwd = $original->forward(include => 'ENCAPSULATE');
 # code: $fwd->printStructure
 multipart/mixed: The source message
   text/plain: prelude/postlude/signature
   message/rfc822
      multipart/alternative: The source message
         text/plain: content in raw text
         text/html: content as html

The message structure is much more complex, but no information is lost.
This is probably the reason why many MUAs use this when the forward
an original message as attachment.

=back

After the creation of the forward, you may want to L<rebuild()|Mail::Message::Construct::Rebuild/"Constructing a message"> the
message to remove unnecessary complexities.  Of course, that is not
required.





=head1 REFERENCES

See the MailBox website at L<http://perl.overmeer.net/mailbox/> for more details.

=head1 COPYRIGHTS

Distribution version 2.055.
Written by Mark Overmeer (mark@overmeer.net).  See the ChangeLog for
other contributors.

Copyright (c) 2001-2003 by the author(s). All rights reserved.
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.


