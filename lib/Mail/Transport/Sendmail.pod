
=head1 NAME

Mail::Transport::Sendmail - transmit messages using external Sendmail program


=head1 INHERITANCE

 Mail::Transport::Sendmail
   is a Mail::Transport::Send
   is a Mail::Transport
   is a Mail::Reporter


=head1 SYNOPSIS

 my $sender = Mail::Transport::Sendmail->new(...);
 $sender->send($message);


=head1 DESCRIPTION

Implements mail transport using the external C<'Sendmail'> program.
When instantiated, the mailer will look for the binary in specific system
directories, and the first version found is taken.

Some people use Postfix as MTA.  Postfix can be installed as replacement
for Sendmail: is provides a program with the same name and options.  So,
this module supports postfix as well.



=head1 METHODS


=head2 Constructors


Mail::Transport::Sendmail-E<gt>B<new>(OPTIONS)

=over 4

 Option            Defined in       Default       
 executable        L<Mail::Transport>  C<undef>      
 hostname          L<Mail::Transport>  C<'localhost'>
 interval          L<Mail::Transport>  C<30>         
 log               L<Mail::Reporter>  C<'WARNINGS'> 
 password          L<Mail::Transport>  undef         
 port              L<Mail::Transport>  undef         
 proxy             L<Mail::Transport>  undef         
 retry             L<Mail::Transport>  <false>       
 sendmail_options                   []            
 timeout           L<Mail::Transport>  C<120>        
 trace             L<Mail::Reporter>  C<'WARNINGS'> 
 username          L<Mail::Transport>  undef         
 via               L<Mail::Transport>  C<'sendmail'> 

. executable FILENAME

. hostname HOSTNAME|ARRAY-OF-HOSTNAMES

. interval SECONDS

. log LEVEL

. password STRING

. port INTEGER

. proxy PATH

. retry NUMBER|undef

. sendmail_options ARRAY

=over 4

Add to the command-line of the started sendmail MTU a list of
separate words.  So say C< [ '-f', $file ] > and not C< [ "-f $file" ] >,
because the latter will be taken by sendmail as one word only.

=back

. timeout SECONDS

. trace LEVEL

. username STRING

. via CLASS|NAME

=back

=head2 Sending mail


$obj-E<gt>B<destinations>(MESSAGE, [ADDRESS|ARRAY-OF-ADDRESSES])

=over 4

See L<Mail::Transport::Send/"Sending mail">

=back

$obj-E<gt>B<putContent>(MESSAGE, FILEHANDLE, OPTIONS)

=over 4

See L<Mail::Transport::Send/"Sending mail">

=back

$obj-E<gt>B<send>(MESSAGE, OPTIONS)

=over 4

See L<Mail::Transport::Send/"Sending mail">

=back

$obj-E<gt>B<trySend>(MESSAGE, OPTION)

=over 4

=back

=head2 Server connection


$obj-E<gt>B<findBinary>(NAME [, DIRECTORIES])

=over 4

See L<Mail::Transport/"Server connection">

=back

$obj-E<gt>B<remoteHost>

=over 4

See L<Mail::Transport/"Server connection">

=back

$obj-E<gt>B<retry>

=over 4

See L<Mail::Transport/"Server connection">

=back

=head2 Error handling


$obj-E<gt>B<AUTOLOAD>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<addReport>(OBJECT)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

Mail::Transport::Sendmail-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<errors>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<log>([LEVEL [,STRINGS]])

Mail::Transport::Sendmail-E<gt>B<log>([LEVEL [,STRINGS]])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logPriority>(LEVEL)

Mail::Transport::Sendmail-E<gt>B<logPriority>(LEVEL)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logSettings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<notImplemented>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<report>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<reportAll>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<trace>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<warnings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup


$obj-E<gt>B<DESTROY>

=over 4

See L<Mail::Reporter/"Cleanup">

=back

$obj-E<gt>B<inGlobalDestruction>

=over 4

See L<Mail::Reporter/"Cleanup">

=back



=head1 DIAGNOSTICS

I<Error:> Errors when closing sendmail mailer $program: $!

The was no problem starting the sendmail mail transfer agent, but for
some specific reason the message could not be handled correctly.

I<Warning:> Message has no destination

It was not possible to figure-out where the message is intended to go
to.

I<Error:> Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.

I<Warning:> Resent group does not specify a destination

The message which is sent is the result of a bounce (for instance
created with L<Mail::Message::bounce()|Mail::Message::Construct::Bounce/"Constructing a message">), and therefore starts with a
C<Received> header field.  With the C<bounce>, the new destination(s)
of the message are given, which should be included as C<Resent-To>,
C<Resent-Cc>, and C<Resent-Bcc>.

The C<To>, C<Cc>, and C<Bcc> header information is only used if no
C<Received> was found.  That seems to be the best explanation of the RFC.

As alternative, you may also specify the C<to> option to some of the senders
(for instance L<Mail::Transport::SMTP::send(to)|Mail::Transport::Send/"Sending mail"> to overrule any information
found in the message itself about the destination.






=head1 REFERENCES

See the MailBox website at L<http://perl.overmeer.net/mailbox/> for more details.

=head1 COPYRIGHTS

Distribution version 2.060.
Written by Mark Overmeer (mark@overmeer.net).  See the ChangeLog for
other contributors.

Copyright (c) 2001-2003 by the author(s). All rights reserved.
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.


