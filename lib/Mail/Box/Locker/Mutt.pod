
=head1 NAME

Mail::Box::Locker::Mutt - lock a folder using mutt_dotlock


=head1 INHERITANCE

 Mail::Box::Locker::Mutt
   is a Mail::Box::Locker
   is a Mail::Reporter


=head1 SYNOPSIS

 See Mail::Box::Locker


=head1 DESCRIPTION

The C<mutt> mail reader includes an separate program which is specialized
in locking folders.  This locker class uses this external program.
Mutt is not automatically installed.



=head1 METHODS


$obj-E<gt>B<exe>

=over 4

Returns the name of the external binary.

=back

=head2 Constructors


Mail::Box::Locker::Mutt-E<gt>B<new>(OPTIONS)

=over 4

 Option --Defined in     --Default
 exe                       mutt_dotlock
 expires  Mail::Box::Locker  1 hour
 file     Mail::Box::Locker  undef
 folder   Mail::Box::Locker  <required>
 log      Mail::Reporter   'WARNINGS'
 method   Mail::Box::Locker  'DOTLOCK'
 timeout  Mail::Box::Locker  10 seconds
 trace    Mail::Reporter   'WARNINGS'

. exe PATH

=over 4

The name of the program.  May be a relative or absolute path.

=back

. expires SECONDS

. file FILENAME

. folder FOLDER

. log LEVEL

. method STRING|CLASS|ARRAY

. timeout SECONDS|'NOTIMEOUT'

. trace LEVEL

=back

=head2 The Locker


$obj-E<gt>B<filename>([FILENAME])

=over 4

See L<Mail::Box::Locker/"The Locker">

=back

$obj-E<gt>B<folder>

=over 4

See L<Mail::Box::Locker/"The Locker">

=back

$obj-E<gt>B<name>

=over 4

See L<Mail::Box::Locker/"The Locker">

=back

=head2 Locking


$obj-E<gt>B<hasLock>

=over 4

See L<Mail::Box::Locker/"Locking">

=back

$obj-E<gt>B<isLocked>

=over 4

See L<Mail::Box::Locker/"Locking">

=back

$obj-E<gt>B<lock>

=over 4

=back

$obj-E<gt>B<unlock>

=over 4

=back

=head2 Error handling


$obj-E<gt>B<AUTOLOAD>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<addReport>(OBJECT)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

Mail::Box::Locker::Mutt-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<errors>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<log>([LEVEL [,STRINGS]])

Mail::Box::Locker::Mutt-E<gt>B<log>([LEVEL [,STRINGS]])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logPriority>(LEVEL)

Mail::Box::Locker::Mutt-E<gt>B<logPriority>(LEVEL)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logSettings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<notImplemented>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<report>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<reportAll>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<trace>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<warnings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup


$obj-E<gt>B<DESTROY>

=over 4

See L<Mail::Box::Locker/"Cleanup">

=back

$obj-E<gt>B<inGlobalDestruction>

=over 4

See L<Mail::Reporter/"Cleanup">

=back




=head1 DIAGNOSTICS

I<Warning:> Couldn't remove mutt-unlock $folder: $!


I<Error:> Failed to remove expired mutt-lock $lockfile: $!


I<Warning:> Folder $folder already mutt-locked


I<Error:> Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.

I<Warning:> Removed expired mutt-lock $lockfile







=head1 REFERENCES

See the MailBox website at L<http://perl.overmeer.net/mailbox/> for more details.

=head1 COPYRIGHTS

Distribution version 2.069.
Written by Mark Overmeer (mark@overmeer.net).  See the ChangeLog for
other contributors.

Copyright (c) 2001-2006 by the author(s). All rights reserved.
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.


