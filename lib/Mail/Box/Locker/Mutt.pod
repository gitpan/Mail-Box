=head1 NAME

Mail::Box::Locker::Mutt - lock a folder using mutt_dotlock

=head1 INHERITANCE

 Mail::Box::Locker::Mutt
   is a Mail::Box::Locker
   is a Mail::Reporter

=head1 SYNOPSIS

 See Mail::Box::Locker

=head1 DESCRIPTION

The C<mutt> mail reader includes an separate program which is specialized
in locking folders.  This locker class uses this external program.
Mutt is not automatically installed.

=head1 METHODS

$obj-E<gt>B<exe>

=over 4

Returns the name of the external binary.

=back

=head2 Constructors

Mail::Box::Locker::Mutt-E<gt>B<new>(OPTIONS)

=over 4

 Option --Defined in     --Default
 exe                       mutt_dotlock
 expires  Mail::Box::Locker  1 hour
 file     Mail::Box::Locker  undef
 folder   Mail::Box::Locker  <undef>
 log      Mail::Reporter   'WARNINGS'
 method   Mail::Box::Locker  'DOTLOCK'
 timeout  Mail::Box::Locker  10 seconds
 trace    Mail::Reporter   'WARNINGS'

. exe => PATH

=over 4

The name of the program.  May be a relative or absolute path.

=back

. expires => SECONDS

. file => FILENAME

. folder => FOLDER

. log => LEVEL

. method => STRING|CLASS|ARRAY

. timeout => SECONDS|'NOTIMEOUT'

. trace => LEVEL

=back

=head2 The Locker

$obj-E<gt>B<filename>([FILENAME])

=over 4

See L<Mail::Box::Locker/"The Locker">

=back

$obj-E<gt>B<folder>([FOLDER])

=over 4

See L<Mail::Box::Locker/"The Locker">

=back

$obj-E<gt>B<name>

=over 4

See L<Mail::Box::Locker/"The Locker">

=back

=head2 Locking

$obj-E<gt>B<hasLock>

=over 4

See L<Mail::Box::Locker/"Locking">

=back

$obj-E<gt>B<isLocked>

=over 4

See L<Mail::Box::Locker/"Locking">

=back

$obj-E<gt>B<lock>

=over 4

=back

$obj-E<gt>B<unlock>

=over 4

=back

=head2 Error handling

$obj-E<gt>B<AUTOLOAD>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<addReport>(OBJECT)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

Mail::Box::Locker::Mutt-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<errors>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<log>([LEVEL [,STRINGS]])

Mail::Box::Locker::Mutt-E<gt>B<log>([LEVEL [,STRINGS]])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logPriority>(LEVEL)

Mail::Box::Locker::Mutt-E<gt>B<logPriority>(LEVEL)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logSettings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<notImplemented>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<report>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<reportAll>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<trace>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<warnings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup

$obj-E<gt>B<DESTROY>

=over 4

See L<Mail::Box::Locker/"Cleanup">

=back

$obj-E<gt>B<inGlobalDestruction>

=over 4

See L<Mail::Reporter/"Cleanup">

=back

=head1 DIAGNOSTICS

Warning: Couldn't remove mutt-unlock $folder: $!

=over 4

=back

Error: Failed to remove expired mutt-lock $lockfile: $!

=over 4

=back

Warning: Folder $folder already mutt-locked

=over 4

=back

Error: Package $package does not implement $method.

=over 4

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.

=back

Warning: Removed expired mutt-lock $lockfile

=over 4

=back

=head1 SEE ALSO

This module is part of Mail-Box distribution version 2.092,
built on November 20, 2009. Website: F<http://perl.overmeer.net/mailbox/>

=head1 LICENSE

Copyrights 2001-2009 by Mark Overmeer. For other contributors see ChangeLog.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

