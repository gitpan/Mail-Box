
=head1 NAME

Mail::Box::Locker::Multi - lock a folder in all ways which work


=head1 INHERITANCE

 Mail::Box::Locker::Multi
   is a Mail::Box::Locker
   is a Mail::Reporter


=head1 SYNOPSIS

 See Mail::Box::Locker


=head1 DESCRIPTION

The C<::Multi> locker locks a folder in each way it can.  This way, the
chance is highest that any other program will leave the folder alone
during our access to it.

NFS-lock and Flock are tried.  More may be added when the ways to
lock are extended.  DotLock overlaps with NFS-lock, but NFS-lock is
safer, so that version is preferred.



=head1 METHODS


=head2 Constructors


Mail::Box::Locker::Multi-E<gt>B<new>(OPTIONS)

=over 4

 Option   Defined in       Default       
 expires  L<Mail::Box::Locker>  1 hour        
 file     L<Mail::Box::Locker>  undef         
 folder   L<Mail::Box::Locker>  <required>    
 log      L<Mail::Reporter>  C<'WARNINGS'> 
 method   L<Mail::Box::Locker>  C<'MULTI'>    
 timeout  L<Mail::Box::Locker>  10 seconds    
 trace    L<Mail::Reporter>  C<'WARNINGS'> 
 use                       <all possible>

. expires SECONDS

. file FILENAME

. folder FOLDER

. log LEVEL

. method METHOD | CLASS

. timeout SECONDS|'NOTIMEOUT'

. trace LEVEL

. use ARRAY

=over 4

Array of locker types and locker objects to be used to lock one
folder.  The type names are converted into objects.

Some locking types are not available on some platforms, so they will
not be excluded from the default list (NFS POSIX Flock).

=back

=back

=head2 The Locker


$obj-E<gt>B<filename>([FILENAME])

=over 4

See L<Mail::Box::Locker/"The Locker">

=back

$obj-E<gt>B<folder>

=over 4

See L<Mail::Box::Locker/"The Locker">

=back

$obj-E<gt>B<lockers>

=over 4

Returns a list with all locker objects used by this object.

=back

$obj-E<gt>B<name>

=over 4

See L<Mail::Box::Locker/"The Locker">

=back

=head2 Locking


$obj-E<gt>B<hasLock>

=over 4

See L<Mail::Box::Locker/"Locking">

=back

$obj-E<gt>B<isLocked>

=over 4

See L<Mail::Box::Locker/"Locking">

=back

$obj-E<gt>B<lock>(FOLDER)

=over 4

See L<Mail::Box::Locker/"Locking">

=back

$obj-E<gt>B<unlock>

=over 4

See L<Mail::Box::Locker/"Locking">

=back

=head2 Error handling


$obj-E<gt>B<AUTOLOAD>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<addReport>(OBJECT)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<defaultTrace>([LEVEL, [LEVEL])

Mail::Box::Locker::Multi-E<gt>B<defaultTrace>([LEVEL, [LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<errors>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<log>([LEVEL [,STRINGS]])

Mail::Box::Locker::Multi-E<gt>B<log>([LEVEL [,STRINGS]])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logPriority>(LEVEL)

Mail::Box::Locker::Multi-E<gt>B<logPriority>(LEVEL)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logSettings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<notImplemented>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<report>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<reportAll>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<trace>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<warnings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup


$obj-E<gt>B<DESTROY>

=over 4

See L<Mail::Box::Locker/"Cleanup">

=back

$obj-E<gt>B<inGlobalDestruction>

=over 4

See L<Mail::Reporter/"Cleanup">

=back



=head1 DIAGNOSTICS

I<Error:> Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.






=head1 REFERENCES

See the MailBox website at L<http://perl.overmeer.net/mailbox/> for more details.

=head1 COPYRIGHTS

Distribution version 2.052.
Written by Mark Overmeer (mark@overmeer.net).  See the ChangeLog for
other contributors.

Copyright (c) 2001-2003 by the author(s). All rights reserved.
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.


