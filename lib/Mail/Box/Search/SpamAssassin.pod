
=head1 NAME

Mail::Box::Search::SpamAssassin - select spam messages with Mail::SpamAssassin


=head1 INHERITANCE

 Mail::Box::Search::SpamAssassin
   is a Mail::Box::Search
   is a Mail::Reporter


=head1 SYNOPSIS

 use Mail::Box::Manager;
 my $mgr    = Mail::Box::Manager->new;
 my $folder = $mgr->open('Inbox');

 my $spam = Mail::Box::Search::SpamAssassin->new;
 if($spam->search($message)) {...}

 my @msgs   = $filter->search($folder);
 foreach my $msg ($folder->messages)
 {   $msg->delete if $msg->label('spam');
 }

 my $spam2 = Mail::Box::Search::SpamAssassin
               ->new(deliver => 'DELETE');
 $spam2->search($folder);
 $mgr->moveMessages($spamfolder, $folder->messages('spam'));


=head1 DESCRIPTION

I<Spam> means "unsollicited e-mail", and is as name derived from a
Monty Python scatch.  Although Monty Python is fun, spam is a pain:
it needlessly spoils minutes of time from most people: telephone
bills, overful mailboxes which block honest e-mail, and accidentally
removal of honest e-mail which looks like spam.  Spam is the pest
of Internet.

Happily, Mail::Box can be used as spam filter, in combination with
the useful Mail::SpamAssassin module (which must be installed separately).
Each message which is searched is wrapped in a
L<Mail::Message::Wrapper::SpamAssassin|Mail::Message::Wrapper::SpamAssassin> object.

The spam-assassin module version 2 is not really well adapted for
L<Mail::Message|Mail::Message> objects, which will make this search even slower than
spam-detection already is.



=head1 METHODS


=head2 Constructors


Mail::Box::Search::SpamAssassin-E<gt>B<new>(OPTIONS)

=over 4

Create a spam filter.  Internally, a Mail::SpamAssassin object is
maintained.

Only the whole message can be searched; this is a limitation of
the Mail::SpamAssassin module.

 Option         Defined in       Default      
 binaries       L<Mail::Box::Search>  <false>      
 decode         L<Mail::Box::Search>  <true>       
 delayed        L<Mail::Box::Search>  <true>       
 deleted        L<Mail::Box::Search>  <false>      
 deliver        L<Mail::Box::Search>  undef        
 in             L<Mail::Box::Search>  C<'MESSAGE'> 
 label                           c<'spam'>    
 limit          L<Mail::Box::Search>  C<0>         
 log            L<Mail::Reporter>  C<'WARNINGS'>
 logical        L<Mail::Box::Search>  C<'REPLACE'> 
 multiparts     L<Mail::Box::Search>  <true>       
 rewrite_mail                    <true>       
 sa_options                      C<{ }>       
 spam_assassin                   undef        
 trace          L<Mail::Reporter>  C<'WARNINGS'>

. binaries BOOLEAN

. decode BOOLEAN

. delayed BOOLEAN

. deleted BOOLEAN

. deliver undef|CODE|'DELETE'

. in 'HEAD'|'BODY'|'MESSAGE'

. label STRING|undef

=over 4

Mark all selected selected message with the specified STRING.  If this
option is explicitly set to C<undef>, the label will not be set.

=back

. limit NUMBER

. log LEVEL

. logical 'REPLACE'|'AND'|'OR'|'NOT'|'AND NOT'|'OR NOT'

. multiparts BOOLEAN

. rewrite_mail BOOLEAN

=over 4

Add lines to the message header describing the results of the spam
scan. See Mail::SpamAssassin::PerMsgStatus subroutine rewrite_mail.

=back

. sa_options HASH

=over 4

Options to create the internal Mail::SpamAssassin object; see its
manual page for the available options.  Other setting may be provided
via SpamAssassins configuration file mechanism, which is explained in
L<Mail::SpamAssassin::Conf>.

=back

. spam_assassin OBJECT

=over 4

Provide a Mail::SpamAssassin object to be used for searching spam.  If
none is specified, one is created internally.  The object can be
retreived with assassinator().

=back

. trace LEVEL

I<Example:> 

 my $filter = Mail::Box::Search::SpamAssassin
               ->new( found => 'DELETE' );

=back

=head2 Searching


$obj-E<gt>B<assassinator>

=over 4

Returns the internally maintained assassinator object.  You may want
to reach this object for complex configuration.

=back

$obj-E<gt>B<inBody>(PART, BODY)

=over 4

See L<Mail::Box::Search/"Searching">

=back

$obj-E<gt>B<inHead>(PART, HEAD)

=over 4

See L<Mail::Box::Search/"Searching">

=back

$obj-E<gt>B<search>(FOLDER|THREAD|MESSAGE|ARRAY-OF-MESSAGES)

=over 4

See L<Mail::Box::Search/"Searching">

=back

$obj-E<gt>B<searchPart>(PART)

=over 4

See L<Mail::Box::Search/"Searching">

=back

=head2 The Results


$obj-E<gt>B<printMatch>([FILEHANDLE], HASH)

=over 4

See L<Mail::Box::Search/"The Results">

=back

=head2 Error handling


$obj-E<gt>B<AUTOLOAD>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<addReport>(OBJECT)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<defaultTrace>([LEVEL, [LEVEL])

Mail::Box::Search::SpamAssassin-E<gt>B<defaultTrace>([LEVEL, [LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<errors>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<log>([LEVEL [,STRINGS]])

Mail::Box::Search::SpamAssassin-E<gt>B<log>([LEVEL [,STRINGS]])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logPriority>(LEVEL)

Mail::Box::Search::SpamAssassin-E<gt>B<logPriority>(LEVEL)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logSettings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<notImplemented>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<report>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<reportAll>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<trace>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<warnings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup


$obj-E<gt>B<DESTROY>

=over 4

See L<Mail::Reporter/"Cleanup">

=back

$obj-E<gt>B<inGlobalDestruction>

=over 4

See L<Mail::Reporter/"Cleanup">

=back



=head1 DIAGNOSTICS

I<Error:> Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.






=head1 REFERENCES

See the MailBox website at L<http://perl.overmeer.net/mailbox/> for more details.

=head1 COPYRIGHTS

Distribution version 2.052.
Written by Mark Overmeer (mark@overmeer.net).  See the ChangeLog for
other contributors.

Copyright (c) 2001-2003 by the author(s). All rights reserved.
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.


