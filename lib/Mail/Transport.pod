=head1 NAME

Mail::Transport - base class for message exchange

=head1 INHERITANCE

 Mail::Transport
   is a Mail::Reporter

 Mail::Transport is extended by
   Mail::Transport::Receive
   Mail::Transport::Send

=head1 SYNOPSIS

 my $message = Mail::Message->new(...);

 # Some extensions implement sending:
 $message->send;
 $message->send(via => 'sendmail');

 my $sender = Mail::Transport::SMTP->new(...);
 $sender->send($message);

 # Some extensions implement receiving:
 my $receiver = Mail::Transport::POP3->new(...);
 $message = $receiver->receive;

=head1 DESCRIPTION

Objects which extend C<Mail::Transport> implement sending and/or
receiving of messages, using various protocols.

L<Mail::Transport::Send|Mail::Transport::Send> extends this class, and offers general
functionality for send protocols, like SMTP.  L<Mail::Transport::Receive|Mail::Transport::Receive>
also extends this class, and offers receive method.  Some transport
protocols will implement both sending and receiving.

=head1 METHODS

=head2 Constructors

Mail::Transport-E<gt>B<new>(OPTIONS)

=over 4

 Option    --Defined in     --Default
 executable                   undef
 hostname                     'localhost'
 interval                     30
 log         Mail::Reporter   'WARNINGS'
 password                     undef
 port                         undef
 proxy                        undef
 retry                        <false>
 timeout                      120
 trace       Mail::Reporter   'WARNINGS'
 username                     undef
 via                          'sendmail'

. executable => FILENAME

=over 4

If you specify an executable, the module does not need to search the
system directories to figure-out where the client lives.  Using this
decreases the flexible usage of your program: moving your program
to other systems may involve changing the path to the executable,
which otherwise would work auto-detect and unmodified.

=back

. hostname => HOSTNAME|ARRAY-OF-HOSTNAMES

=over 4

The host on which the server runs.  Some protocols accept an array
of alternatives for this option.

=back

. interval => SECONDS

=over 4

The time between tries to contact the remote server for sending or
receiving a message in SECONDS.  This number must be larger than 0.

=back

. log => LEVEL

. password => STRING

=over 4

Some protocols require a password to be given, usually in combination
with a password.

=back

. port => INTEGER

=over 4

The port number behind which the service is hiding on the remote server.

=back

. proxy => PATH

=over 4

The name of the proxy software (the protocol handler).  This must be
the name (preferable the absolute path) of your mail delivery
software.

=back

. retry => NUMBER|undef

=over 4

The number of retries before the sending will fail.  If C<undef>, the
number of retries is unlimited.

=back

. timeout => SECONDS

=over 4

SECONDS till time-out while establishing the connection to a remote server.

=back

. trace => LEVEL

. username => STRING

=over 4

Some protocols require a user to login.

=back

. via => CLASS|NAME

=over 4

Which CLASS (extending C<Mail::Transport>) will transport the data.
Some predefined NAMEs avoid long class names: C<mail> and C<mailx>
are handled by the L<Mail::Transport::Mailx|Mail::Transport::Mailx> module, C<sendmail>
and C<postfix> belong to L<Mail::Transport::Sendmail|Mail::Transport::Sendmail>, and C<smtp>
is implemented in L<Mail::Transport::SMTP|Mail::Transport::SMTP>.  The C<pop> or C<pop3>
protocol implementation can be found in L<Mail::Transport::POP3|Mail::Transport::POP3>.

=back

=back

=head2 Server connection

$obj-E<gt>B<findBinary>(NAME [, DIRECTORIES])

=over 4

Look for a binary with the specified NAME in the directories which
are defined to be safe.  The list of standard directories is followed
by the optional DIRECTORIES.  The full pathname is returned.

You may specify L<new(proxy)|Mail::Transport/"METHODS">, which specifies the absolute name
of the binary to be used.

=back

$obj-E<gt>B<remoteHost>

=over 4

Returns the hostname, port number, username and password to be used to
establish the connection to the server for sending or receiving mail.

=back

$obj-E<gt>B<retry>

=over 4

Returns the retry interval, retry count, and timeout for the connection.

=back

=head2 Error handling

$obj-E<gt>B<AUTOLOAD>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<addReport>(OBJECT)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

Mail::Transport-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<errors>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<log>([LEVEL [,STRINGS]])

Mail::Transport-E<gt>B<log>([LEVEL [,STRINGS]])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logPriority>(LEVEL)

Mail::Transport-E<gt>B<logPriority>(LEVEL)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logSettings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<notImplemented>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<report>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<reportAll>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<trace>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<warnings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup

$obj-E<gt>B<DESTROY>

=over 4

See L<Mail::Reporter/"Cleanup">

=back

$obj-E<gt>B<inGlobalDestruction>

=over 4

See L<Mail::Reporter/"Cleanup">

=back

=head1 DIAGNOSTICS

Warning: Avoid program abuse: specify an absolute path for $exec.

=over 4

Specifying explicit locations for executables of email transfer agents
should only be done with absolute file names, to avoid various pontential
security problems.

=back

Warning: Executable $exec does not exist.

=over 4

The explicitly indicated mail transfer agent does not exists. The normal
settings are used to find the correct location.

=back

Error: Package $package does not implement $method.

=over 4

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.

=back

=head1 SEE ALSO

This module is part of Mail-Box distribution version 2.087,
built on February 03, 2009. Website: F<http://perl.overmeer.net/mailbox/>

=head1 LICENSE

Copyrights 2001-2009 by Mark Overmeer. For other contributors see ChangeLog.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

