
=head1 NAME

Mail::Server::IMAP4 - IMAP4 server implementation (not completed)


=head1 INHERITANCE

 Mail::Server::IMAP4
   is a Mail::Server
   is a Mail::Reporter


=head1 SYNOPSIS

 !!!Partially implemented!!!!
 my $server = Mail::Server::IMAP4->new($msg);


=head1 DESCRIPTION

This module is a place-holder, which can be used to grow code which
is needed to implement a full IMAP4 server.

Although the server is not implemented, parts of this server are
already available.

=over 4

=item * L<Mail::Server::IMAP4::Fetch|Mail::Server::IMAP4::Fetch>

used to capture "FETCH" related information from a message, and produce
server-side FETCH answers.

=item * L<Mail::Server::IMAP4::List|Mail::Server::IMAP4::List>

produce LIST reponses about existing folders.  This works
in combination with a L<Mail::Box::Manage::User|Mail::Box::Manage::User> object.

=item * L<Mail::Server::IMAP4::Search|Mail::Server::IMAP4::Search>

the SEARCH request.  Not implemented yet... looking for a volunteer.

=back



=head1 METHODS


=head2 Constructors


Mail::Server::IMAP4-E<gt>B<new>(OPTIONS)

=over 4

See L<Mail::Reporter/"Constructors">

=back

=head2 Error handling


$obj-E<gt>B<AUTOLOAD>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<addReport>(OBJECT)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

Mail::Server::IMAP4-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<errors>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<log>([LEVEL [,STRINGS]])

Mail::Server::IMAP4-E<gt>B<log>([LEVEL [,STRINGS]])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logPriority>(LEVEL)

Mail::Server::IMAP4-E<gt>B<logPriority>(LEVEL)

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<logSettings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<notImplemented>

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<report>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<reportAll>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<trace>([LEVEL])

=over 4

See L<Mail::Reporter/"Error handling">

=back

$obj-E<gt>B<warnings>

=over 4

See L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup


$obj-E<gt>B<DESTROY>

=over 4

See L<Mail::Reporter/"Cleanup">

=back

$obj-E<gt>B<inGlobalDestruction>

=over 4

See L<Mail::Reporter/"Cleanup">

=back




=head1 DIAGNOSTICS

I<Error:> Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.


=head1 DETAILS

See

=over 4

=item RFC2060: "Internet Message Access Protocol IMAP4v1"

=back





=head1 REFERENCES

See the MailBox website at L<http://perl.overmeer.net/mailbox/> for more details.

=head1 COPYRIGHTS

Distribution version 2.066.
Written by Mark Overmeer (mark@overmeer.net).  See the ChangeLog for
other contributors.

Copyright (c) 2001-2003 by the author(s). All rights reserved.
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.


