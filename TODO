
TODO:

This program was written in December 2000.  This is quite recent, so
please check for a new version: new programs often get many changes
in their first months.

Plans for the (near?) future:
* Thread lint
  Currently, threads are only detected based on some fields in the
  message header which are dedicated for this (the In-Reply-To and
  the References field), however, there are many more ways to
  try to correct things if these are not present.

  If a message does not contain the two mentioned fields, then look
  for a message which is at most a few days younger, whose sender is
  in the reciepient-list of the current message, and where parts of
  the message are qouted (preceeded by some symbols).

* Persistent external files
  Extracting large message-parts into persistent external files.
  Mime::Entity puts attachments in external files during parsing.  When
  the message is put in a folder again, the content is glued back into
  the folder.  It should be nice to keep them external, such that the
  folder-file is much smaller, and parsing done quickly.

* Many more folder-types
  I have a long wishlist of older-types.  However, my knowledge on how
  they work is limited.  Furthermore, I do not have test-data on them.

  - Exmh      (should be relatively simple, extends MH)
  - IMAP      (using Mail::IMAPClient, looks not that hard)
  - Emaul     (for compatibily with Mail::Folder)
  - Maildir   (comparible to MH)

  Any more?

* Make everything autoloading.
  Mail::Box::MH, ::Mbox, and ::Thread could easily be made autoloading.
  For the message-folders, only foundIn() should be kept outside the
  loading mechanism.
  All modules are designed to minimize their dependency, so I should
  work well.
